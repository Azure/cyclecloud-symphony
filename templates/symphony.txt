###########################
## IBM Spectrum Symphony ##
###########################

[cluster Symphony]
FormLayout = selectionpanel
Category = Schedulers

Autoscale = $Autoscale

    [[node defaults]]
    Credentials = $Credentials    
    ImageName = $ImageName
    SubnetId = $SubnetId
    Region = $Region
    KeyPairLocation = ~/.ssh/cyclecloud.pem
    ShutdownPolicy = $ShutdownPolicy

    MachineType = $ExecuteMachineType
    
        [[[configuration]]]
        run_list = recipe[cuser]
        # Disable ip-XXXXXXXX hostname generation
        cyclecloud.hosts.standalone_dns.enabled = ${NodeNameIsHostname==false}
        cyclecloud.hosts.simple_vpc_dns.enabled = ${NodeNameIsHostname==false}

        [[[network-interface eth0]]]
        AssociatePublicIpAddress = false

        [[[cluster-init symphony:default:3.1.3]]]
	
    [[node master]]
    MachineType = $ManagementMachineType
    IsReturnProxy = $ReturnProxy

        [[[configuration]]]
        run_list = recipe[cshared::directories], recipe[cuser], recipe[cshared::server]
        cyclecloud.discoverable = true
	
        [[[configuration symphony]]]
        is_management = true
        is_master = true
        autoscaling.strategy = $SymphonyAutoscalingStrategy
 #       autoscaling.ncpus = 1
 #       autoscaling.ncores = 1
 #       autoscaling.nram = 4096
 #       autoscaling.percent_weights = .7, .2, .05, .05

        [[[input-endpoint ganglia]]]
        PrivatePort = 8652
        PublicPort = 8652

        [[[network-interface eth0]]]
        AssociatePublicIpAddress = $UsePublicNetwork

        [[[cluster-init symphony:master:3.1.3]]]

        [[[volume boot]]]
        Size = $MasterBootDiskSize
        Ssd = $MasterBootDiskSSD

        [[[volume vartmp]]]
        Size = 2048
        SSD = true
        Mount = vartmp
        Persistent = false

    [[nodearray management]]
    MachineType = $ManagementMachineType    
    InitialCoreCount = 0
    MaxCoreCount = 64
        
        [[[volume boot]]]
        Size = $ExecuteBootDiskSize
        Ssd = $ExecuteBootDiskSize

        [[[configuration]]]
        symphony.node_prefix = ${ifThenElse(NodeNamePrefix=="Cluster Prefix", StrJoin("-", toLower(ClusterName), ""), NodeNamePrefix)}
        symphony.node_domain_suffix = $ZCSDomain
        symphony.use_nodename_as_hostname = $NodeNameIsHostname
        cyclecloud.discoverable = true
	
        [[[configuration symphony]]]
        is_management = true

        [[[cluster-init symphony:management:3.1.3]]]

    [[nodearray execute]]
    MaxCoreCount = $MaxExecuteCoreCount
    Interruptible = $UseLowPrio
    Priority = 10

        [[[volume boot]]]
        Size = $ExecuteBootDiskSize
        Ssd = $ExecuteBootDiskSize
    
        [[[configuration]]]
        symphony.node_prefix = ${ifThenElse(NodeNamePrefix=="Cluster Prefix", StrJoin("-", toLower(ClusterName), ""), NodeNamePrefix)}
        symphony.node_domain_suffix = $ZCSDomain
        symphony.use_nodename_as_hostname = $NodeNameIsHostname
        autoscaling.enabled = true

        [[[cluster-init symphony:execute:3.1.3]]]

    [[nodearray execute2]]
    Extends = execute
    MachineType = Standard_E2s_v3
    MaxCount = 400
    Priority = 100

        [[[volume boot]]]
        Size = $ExecuteBootDiskSize
        Ssd = $ExecuteBootDiskSize


    [[nodearray persistent-execute]]
    InitialCoreCount= 0
    MaxCoreCount = 128

        [[[volume boot]]]
        Size = $ExecuteBootDiskSize
        Ssd = $ExecuteBootDiskSize

        [[[configuration]]]
        symphony.node_prefix = ${ifThenElse(NodeNamePrefix=="Cluster Prefix", StrJoin("-", toLower(ClusterName), ""), NodeNamePrefix)}
        symphony.node_domain_suffix = $ZCSDomain
        symphony.use_nodename_as_hostname = $NodeNameIsHostname
        cyclecloud.cluster.autoscale.stop_enabled = false

        [[[cluster-init symphony:execute:3.1.3]]]


[parameters About]
Order = 1

    [[parameters About Symphony]]
        [[[parameter SymphonyLicense]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template = '''
        <table>
          <tr>
            <td><p>Delivers enterprise-class management for running compute- and data-intensive distributed applications on a scalable, shared grid.</p><p>See <a href=\"https://www.ibm.com/us-en/marketplace/analytics-workload-management\" target=\"_blank\">IBM Spectrum Symphony</a> for downloads, documentation and license information.</p></td>
          </tr>
        </table>'''
        Order = 10

        [[[parameter LicenseWarning]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template := "<b>WARNING:</b> Spectrum Symphony requires that both the binaries and license file obtained from IBM be uploaded to your locker's blobs directory prior to use.   You will receive an error during cluster startup if the files are not present."
        Order = 20
        
        [[[parameter Readme]]]
        HideLabel = true
        Config.Plugin = pico.widget.HtmlTemplateWidget
        Config.Template := "Follow the instructions in the <a href=\"https://github.com/Azure/cyclecloud-symphony/\" target=\"_blank\">README</a> for details on instructions on extending and configuring the Project for your environment."
        Order = 30



[parameters Required Settings]
Order = 10

    [[parameters Virtual Machines ]]
    Description = "The cluster, in this case, has two roles: the scheduler master-node with shared filer and the execute hosts. Configure which VM types to use based on the requirements of your application."
    Order = 20


        [[[parameter Region]]]
        Label = Region
        Description = Deployment Location
        ParameterType = Cloud.Region
        DefaultValue = westus2

        [[[parameter ManagementMachineType]]]
        Label = Mgmt Machine Type
        Description = The machine type for the Symphony Management nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_F2s_v2
	
        [[[parameter ExecuteMachineType]]]
        Label = Execute VM Type
        Description = The machine type for the default Symphony Execute nodes
        ParameterType = Cloud.MachineType
        DefaultValue = Standard_F2s_v2,Standard_D2_v5
        Config.Multiselect = true


    [[parameters Auto-Scaling]]
    Description = "The cluster can autoscale to the workload, adding execute hosts as jobs are queued. To enable this check the box below and choose the initial and maximum core counts for the cluster"
    Order = 30

        [[[parameter Autoscale]]]
        Label = Autoscale
        DefaultValue = true
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Start and stop execute instances automatically

        [[[parameter MaxExecuteCoreCount]]]
        Label = Max Cores
        Description = The total number of execute cores to start
        DefaultValue = 100
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 1
        Config.IntegerOnly = true

        [[[parameter UseLowPrio]]]
        Label = Use Low Prio Instances
        DefaultValue = false
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Use low priority instances for execute hosts

    [[parameters Networking]]
    Order = 40

        [[[parameter SubnetId]]]
        Label = Subnet ID
        Description = Subnet Resource Path (ResourceGroup/VirtualNetwork/Subnet)
        ParameterType = Azure.Subnet
        Required = True


[parameters Advanced Settings]
Order = 20

    [[parameters Azure Settings]]
    Order = 10 

        [[[parameter Credentials]]]
        Description = The credentials for the cloud provider
        ParameterType = Cloud.Credentials



    [[parameters Software]]
    Description = "Specify the scheduling software, and base OS installed on all nodes, and optionally the cluster-init and chef versions from your Locker."
    Order = 10

        [[[parameter NodeNameIsHostname]]]
        Label = Name As Hostname
        Description = Should the hostname match the nodename for execute nodes?
        ParameterType = Boolean
        DefaultValue = false
        
        [[[parameter ZCSDomain]]]
        Label = Name of Domain
        Description = Domain name of the node
        ParameterType = String
        DefaultValue = true
 
        [[[parameter NodeNamePrefix]]]
        Label = Node Prefix
        Description = Prefix for generated node names, i.e. "prefix-" generates prefix-nodearray-1. Use 'Cluster Prefix' to get $ClusterName-nodearray-1
        ParameterType = StringList
        Config.Plugin = pico.form.Dropdown
        Config.FreeForm = true
        DefaultValue = "Cluster Prefix"
        Config.Entries := {[Value=""], [Value="Cluster Prefix"]}
        Conditions.Hidden := NodeNameIsHostname != true


        [[[parameter ImageName]]]
        Label = Base OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = cycle.image.ubuntu20

        [[[parameter MasterBootDiskSize]]]
        Label = Master Boot Disk Size
        Description = Size of the master boot disk in GB
        ParameterType = Integer
        DefaultValue = 128

        [[[parameter MasterBootDiskSSD]]]
        Label = Master Boot Disk SSD
        Description = Use SSD for master boot disk
        ParameterType = Boolean
        DefaultValue = true

        [[[parameter ExecuteBootDiskSize]]] 
        Label = Exec Boot Disk Size
        Description = Size of the execute boot disk in GB
        ParameterType = Integer
        DefaultValue = 128

        [[[parameter ExecuteBootDiskSSD]]]
        Label = Exec Boot Disk SSD
        Description = Use SSD for execute boot disk
        ParameterType = Boolean
        DefaultValue = true

        [[[parameter DefaultClusterInitSpecs]]]
        Label = Default Cluster-Init Specs
        Description = Cluster init specs to apply to all nodes
        ParameterType = Cloud.ClusterInitSpecs

        [[[parameter ManagementClusterInitSpecs]]]
        Label = Master Cluster-Init
        Description = Cluster init specs to apply to all managment nodes (including master)
        ParameterType = Cloud.ClusterInitSpecs

        [[[parameter ExecuteClusterInitSpecs]]]
        Label = Execute Cluster-Init Specs
        DefaultValue = =undefined
        Description = Cluster init specs to apply to execute nodes
        ParameterType = Cloud.ClusterInitSpecs
       
        [[[parameter SymphonyAutoscalingStrategy]]]
        Label = Symphony Autoscaling Strategy
        DefaultValue = price
        config.plugin = pico.control.AutoCompleteDropdown
        ParameterType = Cloud.ClusterInitSpecs
            [[[[list Config.Entries]]]]
            Name = price
            Label = Price
            [[[[list Config.Entries]]]]
            Name = weighted
            Label = Weighted
            [[[[list Config.Entries]]]]
            Name = capacity
            Label = Capacity

    [[parameters Advanced Networking]]
    Description = Advanced networking settings

        [[[parameter ReturnProxy]]]
        Label = Return Proxy
        DefaultValue = false
        ParameterType = Boolean
        Config.Label = Use SSH tunnel to connect to CycleCloud (required if direct access is blocked)

        [[[parameter UsePublicNetwork]]]
        Label = Public Head Node
        DefaultValue = true
        ParameterType = Boolean
        Config.Label = Access master node from the Internet

        [[[parameter ShutdownPolicy]]]
        description = By default, autostop will Delete stopped VMS for lowest cost.  Optionally, Stop/Deallocate the VMs for faster restart instead.
        DefaultValue = Terminate
        config.plugin = pico.control.AutoCompleteDropdown
            [[[[list Config.Entries]]]]
            Name = Terminate
            Label = Terminate
            [[[[list Config.Entries]]]]
            Name = Deallocate
            Label = Deallocate	


